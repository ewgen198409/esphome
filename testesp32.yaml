esphome:
  name: testesp32
  friendly_name: testesp32

esp8266:
  board: nodemcuv2

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "qsQmMUMvLh7REAS68i5MFrn5GKYXswAaDVRsCVhWNfw="

ota:
  - platform: esphome
    password: "5fff4b62044756b6565eacd977890ee9"

wifi:
  networks:
    - ssid: !secret wifi_ssid
      password: !secret wifi_password
    - ssid: OpenWrt_Garage
      password: "9514210798"

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Testesp32 Fallback Hotspot"
    password: "OW8Wbpx2FFvG"

binary_sensor:
  - platform: gpio
    id: buton
    pin:
      number: GPIO0
      mode: INPUT_PULLUP
      inverted: true
    filters:
      - delayed_on: 10ms
      - delayed_off: 10ms
    on_click:
      - min_length: 1s
        max_length: 2s
        then:
          display.page.show: page1

      - min_length: 10ms
        max_length: 200ms
        then:
          - if:
              condition:
                display.is_displaying_page: page1
              then:
                display.page.show: advanced_drawing_mode_page

          - if:
              condition:
                display.is_displaying_page: advanced_drawing_mode_page
              then:
                - display_menu.enter: my_display_menu
        #     else:
        #       - display_menu.show:  my_display_menu

sensor:
  - platform: rotary_encoder
    id: encoder
    name: "Rotary Encoder"
    pin_b:
      number: GPIO4
      mode: INPUT
    pin_a:
      number: GPIO5
      mode: INPUT
    on_anticlockwise:
      - display_menu.up:
    on_clockwise:
      - display_menu.down:
    # on_value:
    #   then:
    #     - display.page.show: page2

font:
  - file: "fonts/DS-DIGIB.ttf"
    id: tahoma_clock
    size: 37
  - file: "fonts/timesnewromanpsmt.ttf"
    id: ComicNeue
    size: 10
  - file: "fonts/tahoma.ttf"
    id: font_menu
    size: 11

time:
  - platform: sntp
    id: sntp_time
    timezone: Asia/Omsk
    servers:
      - 0.pool.ntp.org
      - 1.pool.ntp.org
      - 2.pool.ntp.org
spi:
  clk_pin: D5
  mosi_pin: D4

button:
  - platform: restart
    name: "Reboot"
    id: reboot_button

display:
  - platform: st7567_spi
    id: my_display
    dc_pin: D8
    cs_pin: D7
    reset_pin: D6
    update_interval: 0.5s
    pages:
      - id: page1
        lambda: |-
            // Print time in HH:MM format вывол часов
            it.strftime(0, 26, id(tahoma_clock), "%H:%M:%S", id(sntp_time).now());

            // Print вывол даты
            it.strftime(0, 0, id(ComicNeue), "%d %B %Y", id(sntp_time).now());

            // Print вывол день недели
            it.strftime(0, 10, id(ComicNeue), "%A", id(sntp_time).now());  

            it.line(0, 63, 128, 63);
            it.line(0, 24, 128, 24);
            
      - id: advanced_drawing_mode_page
        lambda: |-
          const auto display_width = it.get_width();
          const auto display_height = it.get_height();
          auto half_display_width = (int)(display_width / 2.0f);
          it.menu(half_display_width, 0, id(my_display_menu), half_display_width, display_height);

graphical_display_menu:
  id: my_display_menu
  # display: my_display
  font: font_menu
  # on_redraw:
  #   then:
  #     component.update: my_display
  active: true
  mode: rotary
  items:
    - type: menu
      text: 'Thermostat'
      on_enter:
        then:
          lambda: 'ESP_LOGI("display_menu", "enter: %s", it->get_text().c_str());'
      on_leave:
        then:
          lambda: 'ESP_LOGI("display_menu", "leave: %s", it->get_text().c_str());'
      items:
        - type: back
          text: 'Back'
    - type: command
      text: 'Reboot'
      on_value:
        then:
          - button.press: reboot_button
