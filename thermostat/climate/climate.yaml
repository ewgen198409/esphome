  - platform: thermostat
    id: thermostat_house
    on_boot_restore_from: memory
    name: "Thermostat House"
    visual:
      min_temperature: 10
      max_temperature: 40
      temperature_step:
        target_temperature: 0.5
        current_temperature: 0.1
    sensor: ntc_temp
    min_heating_off_time: 10s
    min_heating_run_time: 10s
    min_idle_time: 10s
    # heat_deadband: ${heat_deadband} °C  # остывает на - 0.5 от заданной
    # heat_overrun: ${heat_overrun} °C  # нагревает выше + 0.5 от заданной
    heat_action:
      - switch.turn_on: relay
    idle_action:
      - switch.turn_off: relay

    on_state:
      - lvgl.label.update:
          id: lbl_intemp
          text:
            format: "%.1f°c"
            args: [ 'x.target_temperature' ]

      - text.set:
          id: state_text
          value: !lambda |-
                    auto mode = id(thermostat_house).mode;
                    auto action = id(thermostat_house).action;
                    if (mode == climate::CLIMATE_MODE_OFF) return "Off";
                    if (action == climate::CLIMATE_ACTION_HEATING) return "Heating";
                    if (action == climate::CLIMATE_ACTION_IDLE) return "Idle";
                    return "------";

    on_control:
      - delay: 2s
      - lvgl.dropdown.update:
          id: dropdown_id
          selected_index: !lambda |-
                    auto mode = id(thermostat_house).mode;
                    if (mode == climate::CLIMATE_MODE_OFF) return 0;
                    return 1;

      # - lvgl.arc.update:
      #     id: arc_therm
      #     value: !lambda return id(thermostat_house).target_temperature;
