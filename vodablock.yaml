# =============  ignore_pin_validation_error: true (for pin GPIO12 or GPIO13) =========================

esphome:
  name: vodablock
  friendly_name: VodaBlock
  on_boot:
    priority: 600
    then:
      - lambda: |-
          gpio_set_direction(GPIO_NUM_12, GPIO_MODE_OUTPUT);
          gpio_set_direction(GPIO_NUM_13, GPIO_MODE_OUTPUT);
          
esp32:
  board: airm2m_core_esp32c3
  framework:
    type: esp-idf

preferences:
  flash_write_interval: 10s

logger:

api:
  reboot_timeout: 0s
  encryption:
    key: "AxmKtUF5x1HHDYVusVzUtAV4H8WE013HRPRmpt4afqM="

ota:
  - platform: esphome
    password: "b3b7c4a68f7147b050484af41caebfb1"

wifi:
  id: wifi_id
  networks:
    - ssid: !secret wifi_ssid
      password: !secret wifi_password
    - ssid: Keenetic-Home
      password: "9994554500"
  reboot_timeout: 60min
  manual_ip:
    static_ip: 192.168.1.164
    gateway: 192.168.1.1
    subnet: 255.255.255.0
  on_connect:
    then:
      - rtttl.play: 'two_short:d=4,o=5,b=100:16e6,16e6'

  ap:
    ssid: "Vodablock Fallback Hotspot"
    password: "IMky0c0aKMCT"

captive_portal:

text_sensor:
  - platform: wifi_info
    ip_address:
      name: IP Address
    ssid:
      name: SSID
# ===============================================================
button:
  - platform: restart
    name: Restart  
# ================== Init status led (on button) ===============
status_led:
  id: led_status
  pin:
    number: GPIO00
    inverted: false
# ==============================================================
# ================== Init relay ================================
switch:
  - platform: gpio
    id: switch_boiler
    name: Реле бойлера
    icon: mdi:water-boiler
    pin:
      number: GPIO6
      mode:
        output: true
        pulldown: true
    restore_mode: ALWAYS_OFF

  - platform: gpio
    id: switch_ventil
    icon: mdi:fan
    name: Реле вентиляции
    pin:
      number: GPIO8
      mode:
        output: true
        pulldown: true
    restore_mode: ALWAYS_OFF

  - platform: gpio
    id: switch_nasos
    name: Реле насоса
    icon: mdi:pump
    pin:
      number: GPIO7
      mode:
        output: true
        pulldown: true
    restore_mode: RESTORE_DEFAULT_OFF
    on_turn_on:
      lambda: |-
        id(water_alarm_fail).publish_state(false);      

  # Доп реле
  - platform: gpio
    id: switch_dop
    name: Реле доп
    pin:
      number: GPIO13
      mode:
        output: true
        pulldown: true
# ================================================================
# ================ Выключатель авто режима вентиляции =================

  - platform: template
    name: "Авто режим вентиляции по влажности"
    icon: mdi:fan-auto
    optimistic: true
    id: auto_mode_switch
    restore_mode: RESTORE_DEFAULT_OFF
    turn_on_action:
      - lambda: |-
          id(auto_mode) = true;

      # если активен режим авто по таймеру - выключить его
      - lambda: |-
          if (id(auto_fantimer)){
            id(auto_fantimer).turn_off();
          }

    turn_off_action:
      - lambda: |-
          id(auto_mode) = false;
# ======================================================================
# ==================== Выключатель аварийного режима утечки воды ============
  - platform: template
    name: "Аварийный режим утечки воды"
    optimistic: true
    icon: mdi:pipe-leak
    id: switch_alarm_water
    restore_mode: RESTORE_DEFAULT_ON

# ============================================================================
  # Выключатель авто режима вентиляции по таймеру
  - platform: template
    name: "Авто режим вентиляции по таймеру"
    icon: mdi:fan-auto
    id: auto_fantimer
    optimistic: true  # Для синхронизации состояния в Home Assistant
    restore_mode: RESTORE_DEFAULT_OFF
    turn_on_action:
      # если активен режим авто по влажности - выключить его
      - lambda: |-
          if (id(auto_mode_switch)){
            id(auto_mode_switch).turn_off();
          }

# ============== Init DS18B20 (датчики температуры) ====================
one_wire:
  - platform: gpio
    pin: GPIO10

binary_sensor:
  - platform: status
    name: "Vodablock Status"

  # Настройка физической кнопки
  - platform: gpio
    id: fiz_switch
    internal: true
    pin:
      number: GPIO1
      inverted: true
      mode: INPUT_PULLUP
    on_press:
      then:
        - switch.toggle: switch_nasos

  - platform: template
    name: "Сенсор утечки 2"
    id: sensor_leak_2
    device_class: moisture
    lambda: |-
      if (id(water_Level_2).state > 50) {
        return true;
      } else {
        return false;
      }
  # Аварийно выключить насос и боилер при обнаружении утечки
    on_press:
      then:
        if:
          condition:
            switch.is_on: switch_alarm_water
          then:
            - switch.turn_off: switch_nasos
            - climate.control:
                id: boiler_control
                mode: 'OFF'
 
  - platform: template
    name: "Сенсор утечки 1"
    id: sensor_leak_1
    device_class: moisture
    lambda: |-
      if (id(water_Level_1).state > 50) {
        return true;
      } else {
        return false;
      }
  # Аварийно выключить насос и боилер при обнаружении утечки
    on_press:
      then:
        if:
          condition:
            switch.is_on: switch_alarm_water
          then:
            - switch.turn_off: switch_nasos
            - climate.control:
                id: boiler_control
                mode: 'OFF'

  # Сенсор аварии протечки воды
  - platform: template
    id: water_alarm_fail
    name: "Аварийный режим активен"

sensor:
  - platform: dallas_temp
    address: 0x687c70190264ff28
    name: Датчик холодной воды
    id: sensor_cold_water
    update_interval: 1s
    unit_of_measurement: "°C"
    icon: "mdi:water-thermometer-outline"
    device_class: "temperature"
    state_class: "measurement"
    accuracy_decimals: 1

  - platform: dallas_temp
    address: 0x755591ed0264ff28
    name: Датчик горячей воды
    id: sensor_hot_water
    update_interval: 1s
    unit_of_measurement: "°C"
    icon: "mdi:water-thermometer-outline"
    device_class: "temperature"
    state_class: "measurement"
    accuracy_decimals: 1
# ================================================================
# ================== init sensor water =========================
  - platform: adc
    pin: GPIO2
    id: Waterbox_Leak_Detection1
    name: "Датчик утечки воды 1"
    update_interval: 1s
    accuracy_decimals: 1    
    unit_of_measurement: 'V'

  - platform: copy
    name: Уровень датчика воды 1
    icon: mdi:battery
    id: water_Level_1
    source_id: Waterbox_Leak_Detection1
    unit_of_measurement: '%'
    accuracy_decimals: 0
    filters:
      - calibrate_linear:
          - 0 -> 0
          - 0.9 -> 100

  - platform: adc
    pin: GPIO3
    id: Waterbox_Leak_Detection2
    name: "Датчик утечки воды 2"
    update_interval: 1s
    accuracy_decimals: 1    
    unit_of_measurement: 'V'   

  - platform: copy
    name: Уровень датчика воды 2
    icon: mdi:battery
    id: water_Level_2
    source_id: Waterbox_Leak_Detection2
    unit_of_measurement: '%'
    accuracy_decimals: 0
    filters:
      - calibrate_linear:
          - 0 -> 0
          - 0.9 -> 100 

# ================================================================
# ================== сенсор датчика влажности с выключателя в ванной ===============
  - platform: homeassistant
    id: humidity_bathroom
    name: Сенсор влажности в ванной
    entity_id: sensor.bathroom_dht11_humidity
#    internal: false
# =================================================================================
  - platform: uptime
    name: Uptime
    id: uptime_human
    icon: mdi:clock-start

  - platform: wifi_signal
    name: WiFi VodaBlock
    update_interval: 60s
    id: wifi_signal_db

  - platform: copy # Reports the WiFi signal strength in %
    source_id: wifi_signal_db
    name: "WiFi Percent Vodablock"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "%"
    entity_category: "diagnostic"
    device_class: ""

    # Общее время наработки вентилятора
  - platform: duty_time
    id: ventil_work_time
    name: Вентилятор Время работы
    icon: mdi:alarm-plus
    update_interval: 1s
#    restore: true
    lambda: "return id(switch_ventil).state;"

# ================== init display ================================
display:
    platform: tm1637
    id: tm1637_display
    clk_pin: GPIO5
    dio_pin: GPIO4
    inverted: true
    update_interval: 0.3s
    length: 4
    lambda: |-
      if (id(sensor_leak_1).state == true){    
        it.printf(0, "FAIL");
      }else if (id(sensor_leak_2).state == true){        
        it.printf(0, "FAIL");
      }else{
        switch(id(time_state)) {
        case 0:
          it.printf("%.1f~", id(sensor_hot_water).state);
        break;

        case 1:
          it.printf(0, "%.1f~", id(sensor_cold_water).state);
        break; 
        }
      }
# =================================================================
# ============== TIME =============================================
time:
  - platform: sntp
    id: homeassistant_time
    timezone: Asia/Omsk
    servers:
      - 0.openwrt.pool.ntp.org
      - 1.openwrt.pool.ntp.org
      - 2.openwrt.pool.ntp.org
    on_time:
      # Every 10 seconds
      - seconds: /10
        then:
          lambda: |-
           id(time_state) += 1;
           if (id(time_state) > 1) {
              id(time_state) = 0;
           }

# ================================================================
# ============== init Buzzer =====================================
# two_short:d=4,o=5,b=100:16e6,16e6
# long:d=1,o=5,b=100:e6
# siren:d=8,o=5,b=100:d,e,d,e,d,e,d,e
output:
  - platform: ledc
    pin: 
      number: GPIO19
#      ignore_pin_validation_error: true
    id: rtttl_out
  
rtttl:
  output: rtttl_out
  gain: 80%
# ================================================================
# =================== thermostat boiler ==========================

climate:
  - platform: bang_bang
    id: boiler_control
    name: "Boiler Temperature Controller"
    sensor: sensor_hot_water
    heat_action:
      - switch.turn_on: switch_boiler
    idle_action:
      - switch.turn_off: switch_boiler
    visual:
      min_temperature: 10
      max_temperature: 80
      temperature_step: 1.0
    default_target_temperature_low: 40.0 °C
    default_target_temperature_high: 55.0 °C

# ===============================================================
# ================== fan control bathroom ========================

# Глобальные переменные для порогов и режима
globals:
  - id: time_state
    type: int
  - id: upper_threshold
    type: float
    restore_value: true
    initial_value: '70.0'
  - id: lower_threshold
    type: float
    restore_value: true
    initial_value: '50.0'
  - id: auto_mode
    type: bool
    restore_value: true
    initial_value: 'true'  # Автоматический режим включён по умолчанию


# Логика автоматического управления вентилятором
interval:
  - interval: 10s
    then:
      - if:
          condition:
          # Если один из сенсоров протечки сработал - отправить состаяние true в сенсор аварии
            lambda: |-
              return ((id(sensor_leak_1).state == true) || (id(sensor_leak_2).state == true));
          then:
            lambda: |-
              id(water_alarm_fail).publish_state(true);

    # Если в режиме догрева реальная темп бойлера привысит уст. в термостате - отключить реле бойлера
      - if:
          condition:
            lambda: |-
              return id(sensor_hot_water).state > id(boiler_control).target_temperature_high;
          then:
            switch.turn_off: switch_boiler

    # Скрипт автоматического управления вентилятором по влажности
      - if:
          condition:
            lambda: 'return id(auto_mode);'  # Проверка: включён ли автоматический режим
          then:
            - lambda: |-
                float humidity = id(humidity_bathroom).state;
                if (humidity > id(upper_threshold)) {
                  id(switch_ventil).turn_on();
                } else if (humidity < id(lower_threshold)) {
                  id(switch_ventil).turn_off();
                }

  # Автоматическое управление реле по интервалам
  - interval: 1min  # Проверяем расписание каждую минуту
    then:
      - lambda: |-
          if (!id(auto_fantimer).state) {
            // Автоматический режим выключен, не делаем ничего
            return;
          }

          auto now = id(homeassistant_time).now();
          if (!now.is_valid()) return;

          bool should_run = false;

          // Функция для проверки одного интервала
          auto check_interval = [&](int start, int end) -> bool {
            if (start <= end) {
              return now.hour >= start && now.hour < end;
            } else {
              return now.hour >= start || now.hour < end;  // Интервал пересекает полночь
            }
          };

          // Проверка всех 5 интервалов
          should_run = check_interval((int)id(start_hour_1).state, (int)id(end_hour_1).state) ||
                       check_interval((int)id(start_hour_2).state, (int)id(end_hour_2).state) ||
                       check_interval((int)id(start_hour_3).state, (int)id(end_hour_3).state) ||
                       check_interval((int)id(start_hour_4).state, (int)id(end_hour_4).state) ||
                       check_interval((int)id(start_hour_5).state, (int)id(end_hour_5).state);

          // Управляем реле в зависимости от результата
          if (should_run) {
            id(switch_ventil).turn_on();
          } else {
            id(switch_ventil).turn_off();
          }

# Слайдеры для настройки порогов в Home Assistant
number:
  - platform: template
    name: "Верхний порог влажности"
    icon: mdi:waves-arrow-right
    min_value: 0.0
    max_value: 100.0
    step: 1.0
    optimistic: true
    id: upper_threshold_number
    initial_value: 70.0
    restore_value: true
    set_action:
      - lambda: |-
          id(upper_threshold) = x;

  - platform: template
    name: "Нижний порог влажности"
    icon: mdi:waves-arrow-left
    min_value: 0.0
    max_value: 100.0
    step: 1.0
    optimistic: true
    id: lower_threshold_number
    initial_value: 50.0
    restore_value: true
    set_action:
      - lambda: |-
          id(lower_threshold) = x;

  # Пять временных интевалов работы вентиляции
  - platform: template
    name: "Интервал 1: Начало (часы)"
    icon: mdi:timer-sand
    id: start_hour_1
    min_value: 0
    max_value: 23
    step: 1
    optimistic: true
    restore_value: true

  - platform: template
    name: "Интервал 1: Конец (часы)"
    icon: mdi:timer-sand-complete
    id: end_hour_1
    min_value: 0
    max_value: 23
    step: 1
    optimistic: true
    restore_value: true

  - platform: template
    name: "Интервал 2: Начало (часы)"
    icon: mdi:timer-sand
    id: start_hour_2
    min_value: 0
    max_value: 23
    step: 1
    optimistic: true
    restore_value: true

  - platform: template
    name: "Интервал 2: Конец (часы)"
    icon: mdi:timer-sand-complete
    id: end_hour_2
    min_value: 0
    max_value: 23
    step: 1
    optimistic: true
    restore_value: true

  - platform: template
    name: "Интервал 3: Начало (часы)"
    icon: mdi:timer-sand
    id: start_hour_3
    min_value: 0
    max_value: 23
    step: 1
    optimistic: true
    restore_value: true

  - platform: template
    name: "Интервал 3: Конец (часы)"
    icon: mdi:timer-sand-complete
    id: end_hour_3
    min_value: 0
    max_value: 23
    step: 1
    optimistic: true
    restore_value: true

  - platform: template
    name: "Интервал 4: Начало (часы)"
    icon: mdi:timer-sand
    id: start_hour_4
    min_value: 0
    max_value: 23
    step: 1
    optimistic: true
    restore_value: true

  - platform: template
    name: "Интервал 4: Конец (часы)"
    icon: mdi:timer-sand-complete
    id: end_hour_4
    min_value: 0
    max_value: 23
    step: 1
    optimistic: true
    restore_value: true

  - platform: template
    name: "Интервал 5: Начало (часы)"
    icon: mdi:timer-sand
    id: start_hour_5
    min_value: 0
    max_value: 23
    step: 1
    optimistic: true
    restore_value: true

  - platform: template
    name: "Интервал 5: Конец (часы)"
    icon: mdi:timer-sand-complete
    id: end_hour_5
    min_value: 0
    max_value: 23
    step: 1
    optimistic: true
    restore_value: true
# =================================================================

#     DOP CONNECTOR
# 
#    -------------
#   | 1 (io12)    |
#   |             |
#   | 2 (io18)    |
#   |             |
#   | 3 (5v)      |
#   |             |
#   | 4 (GND)     |
#   |             |
#   | 5 (dop rele)|
#    -------------
#
# Первый контакт помечен согластно схеме
# На силовых контактах НОЛЬ помечен 
#